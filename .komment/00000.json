[
  {
    "name": "BlogShare.js",
    "path": "Components/BlogShare.js",
    "content": {
      "structured": {
        "description": "A reusable React component called BlogShare that generates a Twitter share button. The button uses the FaTwitter icon from react-icons and is styled using CSS classes. When clicked, it opens a new tab with a pre-populated tweet text, URL, and hashtags.",
        "items": [
          {
            "id": "ea3f3f2d-6d65-368e-6a4e-7a2c0c399d50",
            "ancestors": [],
            "description": "Generates a Twitter share button for a blog post, allowing users to tweet about it. It takes a `data` object as input and returns JSX for a button that includes a link to the Twitter API with pre-filled text, URL, and hashtags.",
            "params": [
              {
                "name": "obj",
                "default_value": null,
                "optional": false,
                "type_name": "object",
                "description": "Referred to as `data`. It contains several key-value pairs, including `Title`, `Tags`, which are used to construct the Twitter share button's link and text content."
              },
              {
                "name": "obj.data",
                "default_value": null,
                "optional": false,
                "type_name": "object",
                "description": "Expected to hold blog data."
              }
            ],
            "returns": {
              "type_name": "JSX.Element",
              "description": "A React element consisting of a div with a button that contains a Twitter icon and a tweet sharing link. The link includes the title of the blog post, its URL, and hashtags."
            },
            "usage": {
              "language": "javascript",
              "code": "<BlogShare data={{ Title: \"This is a blog title\", Tags: \"tag1 tag2\" }} />\n",
              "description": ""
            },
            "name": "BlogShare",
            "location": {
              "start": 3,
              "insert": 3,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 25,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "Footer.js",
    "path": "Components/Footer.js",
    "content": {
      "structured": {
        "description": "A reusable React component named \"Footer\". It generates an absolute positioned footer at the bottom of the webpage with a dark indigo background and contains social media links, copyright information, and current year. The component uses icons from \"react-icons\" package to display Twitter, GitHub, Instagram, and LinkedIn logos.",
        "items": [
          {
            "id": "7d7007ad-544c-beaf-1840-e05ab710c54f",
            "ancestors": [],
            "description": "Creates a footer section with copyright information and social media links. It gets the current year and displays it along with the name \"Bits-Of-C0de\" and a Twitter handle. The footer is then rendered with flexbox layout and uses various icons for social media platforms.",
            "params": [],
            "returns": {
              "type_name": "JSX.Element",
              "description": "A React component that represents an HTML footer element with a complex structure containing multiple child elements and nested tags."
            },
            "usage": {
              "language": "javascript",
              "code": "const footer = <Footer />;\nReactDOM.render(footer, document.getElementById('root'));",
              "description": ""
            },
            "name": "Footer",
            "location": {
              "start": 4,
              "insert": 4,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 57,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "about.js",
    "path": "pages/about.js",
    "content": {
      "structured": {
        "description": "A React component named \"about\" that renders an about page with its author's information, topics and two buttons for visiting their website and following on Twitter. The page is wrapped by Navbar and Footer components from other parts of the application. It fetches data about topics in getStaticProps function using getAllTopics() function.",
        "items": [
          {
            "id": "c5fd06db-a85a-6085-424b-95ff934e8df3",
            "ancestors": [],
            "description": "Retrieves an array of topics using the `getAllTopics()` utility and prepares it to be statically generated by exporting it as a React component's props.",
            "params": [],
            "returns": {
              "type_name": "object",
              "description": "An instance of an object with one property named \"props\" whose value is another object containing a single property named \"topics\" with a value of allTopics."
            },
            "usage": null,
            "name": "getStaticProps",
            "location": {
              "start": 6,
              "insert": 6,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 8,
            "docLength": null
          },
          {
            "id": "487d1ebb-1f63-1c86-3547-10da4dd2e948",
            "ancestors": [],
            "description": "Renders an \"About\" page, displaying a logo, a brief introduction, and two buttons to view Soumyajit's works on his website and follow him on Twitter. It accepts a `topics` object as a prop and uses it to populate the Navbar component.",
            "params": [
              {
                "name": "obj",
                "default_value": null,
                "optional": false,
                "type_name": "object",
                "description": "Named `topics`. It accepts an object with key-value pairs, where keys represent topics and values are unknown or omitted. The purpose of this parameter is to pass topics data from outside the component."
              },
              {
                "name": "obj.topics",
                "default_value": null,
                "optional": false,
                "type_name": "object",
                "description": "Used to pass topics data to the `Navbar` component."
              }
            ],
            "returns": {
              "type_name": "JSX.Element",
              "description": "A React component that renders an HTML structure consisting of several elements including a navbar, images, text, buttons, and footer."
            },
            "usage": {
              "language": "javascript",
              "code": "about({ topics: ['home', 'about'] });\n",
              "description": ""
            },
            "name": "about",
            "location": {
              "start": 15,
              "insert": 15,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 51,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "[id].js",
    "path": "pages/blogs/[id].js",
    "content": {
      "structured": {
        "description": "A Next.js application that generates static site generation (SSG) for blog posts. It uses SWR to fetch data from `getAllBlogPosts` and `getAllTopics`, and serialize Markdown content using `next-mdx-remote`. The app's layout is composed of several components, including `Navbar`, `Footer`, `BlogInner`, `LikeBtn`, and `Comments`.",
        "items": [
          {
            "id": "6d40dc1f-69fb-bca5-7140-7dcce965b4f9",
            "ancestors": [],
            "description": "Generates static paths for a Next.js page, which are used to pre-render pages at build time. It retrieves all blog posts, extracts the title, converts it to a valid URL slug, and maps them into an array of objects defining the paths.",
            "params": [],
            "returns": {
              "type_name": "any",
              "description": "An object containing two properties: `paths` and `fallback`. The `paths` property holds an array of objects, each with a `params` property containing an object with a single key-value pair (`id`) mapped from the input `allBlogs`."
            },
            "usage": {
              "language": "javascript",
              "code": "getStaticPaths().then(paths => {\n  paths.forEach(path => {\n    return fetch(`https://example.com/${path.params.id}`)\n      .then(response => response.json())\n      .then(data => console.log(data));\n  });\n});\n",
              "description": ""
            },
            "name": "getStaticPaths",
            "location": {
              "start": 14,
              "insert": 14,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 11,
            "docLength": null
          },
          {
            "id": "aab59eaa-09a1-f5a4-c544-b3e1b4296e11",
            "ancestors": [],
            "description": "Retrieves blog posts and topics, filters a specific page based on the URL parameter, serializes its content with metadata, and returns props to be pre-rendered at build time, including the filtered page's data, content, ID, headings, and all topics.",
            "params": [
              {
                "name": "context",
                "default_value": null,
                "optional": false,
                "type_name": "any",
                "description": "Used to pass route parameters."
              }
            ],
            "returns": {
              "type_name": "object",
              "description": "Composed of five properties: `data`, `content`, `id`, `headings`, and `topics`."
            },
            "usage": {
              "language": "javascript",
              "code": "getStaticProps({ params: { id: 'example-blog' } })\n  .then((props) => {\n    const { data, content, id, headings, topics } = props.props;\n  });\n",
              "description": ""
            },
            "name": "getStaticProps",
            "location": {
              "start": 26,
              "insert": 26,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 28,
            "docLength": null
          },
          {
            "id": "807d3c3b-3316-ba85-9f45-924548d6f84a",
            "ancestors": [],
            "description": "Renders a blog page, including metadata in the HTML head, and a layout consisting of a navigation bar, main content, like button, share button, comments section, and footer. The content is rendered conditionally based on the provided data.",
            "params": [
              {
                "name": "obj",
                "default_value": null,
                "optional": false,
                "type_name": "object",
                "description": "5-tuple, comprising five properties: data, content, id, headings, and topics. Each property corresponds to a distinct piece of information that will be used within the function's JSX return statement."
              },
              {
                "name": "obj.data",
                "default_value": null,
                "optional": false,
                "type_name": "any",
                "description": "Used to contain metadata for rendering the blog page."
              },
              {
                "name": "obj.content",
                "default_value": null,
                "optional": false,
                "type_name": "string",
                "description": "Used for rendering blog content."
              },
              {
                "name": "obj.id",
                "default_value": null,
                "optional": false,
                "type_name": "string",
                "description": "Used to identify specific content."
              },
              {
                "name": "obj.headings",
                "default_value": null,
                "optional": false,
                "type_name": "object",
                "description": "Used to render blog headings."
              },
              {
                "name": "obj.topics",
                "default_value": null,
                "optional": false,
                "type_name": "object",
                "description": "Used to render navigation topics on the page."
              }
            ],
            "returns": {
              "type_name": "JSX.Element",
              "description": "A React component that consists of two main elements: `<Head>` and a container `<div>`. The `<div>` contains various child components such as `<Navbar>`, `<BlogInner>`, `<LikeBtn>`, etc."
            },
            "usage": {
              "language": "javascript",
              "code": "const data = { Title: \"Example\", Abstract: \"This is just an example\" };\nid({ data, content: \"Content\", id: \"1\", headings: [], topics: [] });\n",
              "description": ""
            },
            "name": "id",
            "location": {
              "start": 55,
              "insert": 55,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 36,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "index.js",
    "path": "pages/index.js",
    "content": {
      "structured": {
        "description": "A Next.js page that retrieves blog posts and topics from external data sources using the `getAllBlogPosts` and `getAllTopics` functions. The page then renders these data as a list of blog headers, along with a navigation bar and footer components. The metadata for social media sharing is also defined in the HTML head section.",
        "items": [
          {
            "id": "45396ddf-87cd-5ba9-b644-6435bbf01661",
            "ancestors": [],
            "description": "Initializes by retrieving lists of blog posts and topics using external functions, then returns an object containing these lists as props to be statically generated at build time.",
            "params": [],
            "returns": {
              "type_name": "object",
              "description": "Used to populate props for a React component. This object contains two key-value pairs: \"blogs\" and \"topics\", where \"blogs\" and \"topics\" are arrays."
            },
            "usage": null,
            "name": "getStaticProps",
            "location": {
              "start": 8,
              "insert": 8,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 10,
            "docLength": null
          },
          {
            "id": "c5f8950f-c112-6bb0-2e44-9654de56adf8",
            "ancestors": [],
            "description": "Renders a home page with metadata and content, including a navigation bar (`Navbar`), header, blog headers (`BlogHeader`) for published blogs, and footer. It accepts two props: `blogs`, an array of blog data, and `topics`, an array of topic names.",
            "params": [
              {
                "name": "obj",
                "default_value": null,
                "optional": false,
                "type_name": "object",
                "description": "Expected to contain two properties: `blogs` and `topics`. The value of `blogs` is an array of blog objects, while `topics` likely contains an array or other collection of topics related to software development."
              },
              {
                "name": "obj.blogs",
                "default_value": null,
                "optional": false,
                "type_name": "object",
                "description": "Intended for rendering blog posts."
              },
              {
                "name": "obj.topics",
                "default_value": null,
                "optional": false,
                "type_name": "object",
                "description": "Used to pass topics related to software development."
              }
            ],
            "returns": {
              "type_name": "JSX.Element",
              "description": "A React component that consists of several elements: Head, div with Navbar, Header, flex container with mapped blog posts, and Footer."
            },
            "usage": {
              "language": "javascript",
              "code": "const Home = ({ blogs, topics }) => {\n  // code remains same\n};\n\n// Usage: \nHome({ blogs: [{ data: { title: 'Hello World' } }, { data: { title: 'Second Blog Post' } }], topics: ['JavaScript', 'React'] });\n",
              "description": ""
            },
            "name": "Home",
            "location": {
              "start": 19,
              "insert": 19,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 52,
            "docLength": null
          }
        ]
      }
    }
  }
]